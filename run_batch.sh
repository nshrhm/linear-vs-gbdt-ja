#!/bin/bash

# ==============================================================================
# 複数のPythonプログラムを逐次実行し、結果をログに記録するバッチスクリプト
# ==============================================================================

# --- 設定項目 ---

# 実行するPythonプログラムのリスト（この配列を編集してください）
PROGRAMS=(
    "ex1_model_comparison_linearity.py"
    "ex2_low_interaction_comparison.py"
    "ex3_extrapolation_comparison.py"
    "ex4_small_sample_comparison.py"
    "ex5_interpretability_comparison.py"
)

# ログを記録するファイル名
LOG_FILE="execution_log.txt"

# --- スクリプト本体 ---

# ログファイルにバッチ処理の開始を記録
echo "==================================================" >> "${LOG_FILE}"
echo "[$(date '+%Y-%m-%d %H:%M:%S')] INFO: バッチ処理を開始します。" >> "${LOG_FILE}"
echo "==================================================" >> "${LOG_FILE}"

echo "バッチ処理を開始しました。詳細は ${LOG_FILE} を確認してください。"

# プログラムリストをループで順番に実行
for program in "${PROGRAMS[@]}"
do
    echo "--------------------------------------------------"
    # コンソールに進捗を表示
    echo "実行中: ${program}"

    # 実行開始をログに記録
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] INFO: ${program} の実行を開始します。" >> "${LOG_FILE}"

    # Pythonプログラムを実行
    python3 "${program}"

    # 実行結果（終了ステータス）を判定
    # 直前のコマンドの終了ステータスが特殊変数 $? に格納される
    if [ $? -eq 0 ]; then
        # 成功した場合 (終了ステータスが0)
        echo "結果: 正常に終了しました。"
        echo "[$(date '+%Y-%m-%d %H:%M:%S')] SUCCESS: ${program} は正常に終了しました。" >> "${LOG_FILE}"
    else
        # 失敗した場合 (終了ステータスが0以外)
        echo "結果: エラーが発生しました。"
        echo "[$(date '+%Y-%m-%d %H:%M:%S')] ERROR: ${program} の実行中にエラーが発生しました。" >> "${LOG_FILE}"
    fi
done

echo "--------------------------------------------------"
echo "全てのプログラムの実行が完了しました。"

# ログファイルにバッチ処理の終了を記録
echo "==================================================" >> "${LOG_FILE}"
echo "[$(date '+%Y-%m-%d %H:%M:%S')] INFO: 全てのバッチ処理が完了しました。" >> "${LOG_FILE}"
echo "==================================================" >> "${LOG_FILE}"